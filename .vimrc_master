"###############################################################################
                                " Runtime Configurations
"###############################################################################

set nocompatible   		        " be improved, REQUIRED
filetype off       		        " REQUIRED
set laststatus=2

" set the runtime path to include vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let vundle manage itself, REQUIRED
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'            " https://github.com/scrooloose/nerdtree
Plugin 'Xuyuanp/nerdtree-git-plugin'    " https://github.com/Xuyuanp/nerdtree-git-plugin
Plugin 'tpope/vim-fugitive'             " https://github.com/tpope/vim-fugitive
Plugin 'tpope/vim-surround'             " https://github.com/tpope/vim-surround
Plugin 'tpope/vim-eunuch'               " https://github.com/tpope/vim-eunuch
Plugin 'itchyny/lightline.vim'          " https://github.com/itchyny/lightline.vim
Plugin 'itchyny/vim-gitbranch'          " https://github.com/itchyny/vim-gitbranch
Plugin 'christoomey/vim-tmux-navigator' " https://github.com/christoomey/vim-tmux-navigator
Plugin 'vimwiki/vimwiki'                " https://github.com/vimwiki/vimwiki
"
" all plugins must be added before the following line
call vundle#end()               " REQUIRED
filetype plugin indent on        " REQUIRED

" Brief Plugin help
":PluginList                    - Lists configured plugins
":PluginInstall                 - Installs plugins
":PluginUpdate                  - Updates installed plugins
":PluginClean                   - Confirms removal of unused plugins; append '!' to auto-approve removal
" To initiate, launch vim and run :PluginInstall
"###############################################################################
                                " ViM Variables
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ }
"###############################################################################
                        " ViM editor option preferences
syntax on
color slate 
set bg=dark        		        " Set a text color for dark backgrounds
set history=500     	        " Keep 500 lines of history
set nu	            	        " Enable line numbering
set rnu	            	        " Enable relative line numbering
set ruler                       " Show the cursor line and column position
set showcmd		                " Show incomplete commands
set hls	            	        " Show highlight search
set incsearch 	    	        " Show incremental search
set ignorecase	    	        " Set ignore case for search patterns
set lbr		                    " Enable line breaks
set ai		                    " set auto-indent
set si		                    " set smart auto-indent
set expandtab		            " Use spaces when tab is inserted
set mousehide		            " Hide mouse cursor while typing
set scrolloff=5		            " Minimum number of lines to shown above or below cursor
set noshowmode                  " Unshow the last line of the editor
set shiftwidth=4		        " Set number of spaces to use for auto-indent step
set showmatch		            " Briefly jump to matching bracket if one has been inserted
set spell		                " Enable spellchecking
set wrap		                " Long lines wrap and continue on next line
set cursorline	    	        " Highlight the screen line of the cursor
set clipboard=unnamedplus		" Use the clipboard as an unnamed register
set tabstop=4	             	" Number of spaces that <Tab> in file uses
set listchars=tab:▸\ ,eol:¬		" Characters for displaying in list mode
set vb      		            " Sets the visual bell for error displays 

"###############################################################################
                                " ViM Autocommands 
au BufWinLeave * mkview
au BufWinEnter * silent loadview

"###############################################################################
                                " Vimwiki configuration
"let wiki1 = {}
"let wiki_1.path = '~/vimwiki_work_md/'
"let wiki_1.syntax = 'markdown'
"let wiki_1.ext = '.md'
"
"let wiki_2 = {}
"let wiki_2.path = '~/vimwiki_personal_md/'
"let wiki_2.syntax = 'markdown'
"let wiki_2.ext = '.md'
"
"let g:vimwiki_list = [wiki_1, wiki_2]
"let g:vimwiki_ext2syntax = {'.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}
"
""###############################################################################
                                " Mapped hotkeys

" Mapped leader hotkeys for file workflow efficiencies
let mapleader="'"                       " Set map leader character to a comma
map <leader>sv :source ~/.vimrc<CR>		" This mapping is for sourcing the vimrc file
map <leader>w :w!<CR>	    	        " This mapping is for writing the file
map <leader>q :q<CR>	    	        " This mapping is for exiting the file
map <leader>qf :q!<CR>	    	        " This mapping is for force exiting the file

" Mapped keys for window pane height/width adjustments
map <leader>= <C-w>+		            " Increase height of current window pane
map <leader>- <C-w>-		            " Decrease height of current window pane
map <leader>[ <C-w>>		            " Increase width of current window pane
map <leader>] <C-w><		            " Decrease width of current window pane
map <leader>` <C-w>=		            " Resize all window panes

" Mapped keys for window movements
map <C-h> <C-w>h		        " Move to window pane to the left
map <C-l> <C-w>l		        " Move to window pane to the right
map <C-k> <C-w>k		        " Move to window pane above
map <C-j> <C-w>j		        " Move to window pane below
map <C-o> :NERDTreeToggle<CR>   " Open a NERDTree with Ctrl-O

" Mapped keys for code snippets
map <leader>^ I<sup>*<ESC><Space><Space>$A*</sup><ESC><CR>      " This mapping is to add a superscript markdown snippet 

" Mapped keys for blog image tags 
map <F2>  i<CR><figure<Space>class="center"><CR><a<Space>href="(image<Space>address)"><img<Space>alt="Image<Space>Name"<Space>src"(image<Space>address)"<Space>style="width:600px;heigh:200px;"></a><CR><figcaption>Image<Space>by<a<Space>href="(URL)"><strong> </strong></a></figcaption><CR></figure><CR><CR>

" Mapped keys for a new to do list item
map <F3> i*<Space><Space>[<Space>]<Space>

" Mapped keys for a completed to do list item
map <F4> 06xi*<Space><Space>[x]<Space>

" Mapped keys for a python script template header 
map <F5> i#!/usr/bin/env<Space>python<CR><CR>#<Space>Script<Space>Name:<Space><CR>#<Space>Creation<Space>Date:<Space><CR>#<Space>Description:<Space><CR>#<Space>Author:<Space>Mr.<Space>Machine<CR>#<Space>Tags:<Space><CR><CR>#<Space>Library<Space>Imports<CR>

" Mapped keys for a bash script template header 
map <F6> i#!/bin/bash<CR><CR>#<Space>Script<Space>Name:<Space><CR>#<Space>Creation<Space>Date:<Space><CR>#<Space>Description:<Space><CR>#<Space>Author:<Space>Mr.<Space>Machine<CR>#<Space>Tags:<Space><CR><CR>#<Space>Args<CR>

"###############################################################################
                                " ViM NoRemaps 
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>
nnoremap <silent> <c-/> :TmuxNavigatePrevious<cr>
"###############################################################################
